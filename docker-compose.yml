version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: lifebuddy-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: lifebuddy123
      MONGO_INITDB_DATABASE: lifebuddy
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./backend/database/init:/docker-entrypoint-initdb.d
    networks:
      - lifebuddy-network

  # Redis Cache
  redis:
    image: redis:7.2-alpine
    container_name: lifebuddy-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - lifebuddy-network

  # Elasticsearch for search functionality
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.0
    container_name: lifebuddy-elasticsearch
    restart: unless-stopped
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    networks:
      - lifebuddy-network

  # Kibana for Elasticsearch management (optional)
  kibana:
    image: docker.elastic.co/kibana/kibana:8.11.0
    container_name: lifebuddy-kibana
    restart: unless-stopped
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch
    networks:
      - lifebuddy-network

  # Backend API Server
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: lifebuddy-backend
    restart: unless-stopped
    environment:
      - NODE_ENV=development
      - PORT=3000
      - MONGODB_URI=mongodb://admin:lifebuddy123@mongodb:27017/lifebuddy?authSource=admin
      - REDIS_URL=redis://redis:6379
      - ELASTICSEARCH_URL=http://elasticsearch:9200
      - JWT_SECRET=your-super-secret-jwt-key-change-in-production
      - OPENAI_API_KEY=${OPENAI_API_KEY}
    ports:
      - "3000:3000"
    depends_on:
      - mongodb
      - redis
      - elasticsearch
    volumes:
      - ./backend:/app
      - /app/node_modules
    networks:
      - lifebuddy-network

  # MinIO for local S3-compatible storage
  minio:
    image: minio/minio:latest
    container_name: lifebuddy-minio
    restart: unless-stopped
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin123
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"
    networks:
      - lifebuddy-network

volumes:
  mongodb_data:
    driver: local
  redis_data:
    driver: local
  elasticsearch_data:
    driver: local
  minio_data:
    driver: local

networks:
  lifebuddy-network:
    driver: bridge 